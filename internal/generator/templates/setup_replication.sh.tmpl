#!/bin/bash
# Streaming replication setup script for replica {{ .Replica.Host }}
# Generated by ha-syncgen

set -e

LOG_FILE="/var/log/ha-syncgen/setup-{{ .Replica.Host }}.log"
PRIMARY_HOST="{{ .Primary.Host }}"
PRIMARY_PORT="{{ .Primary.Port }}"
REPLICATION_USER="{{ .Primary.ReplicationUser }}"
DATA_DIR="{{ .Primary.DataDirectory }}"
REPLICATION_SLOT="{{ .Replica.ReplicationSlot }}"
REPLICA_HOST="{{ .Replica.Host }}"

# Ensure log directory exists
mkdir -p "$(dirname "$LOG_FILE")" && touch "$LOG_FILE"

echo "$(date): Setting up streaming replication from $PRIMARY_HOST to $REPLICA_HOST" >> "$LOG_FILE"

# Stop PostgreSQL if running
systemctl stop postgresql || true

# Backup existing data directory if it exists
if [ -d "$DATA_DIR" ]; then
    echo "$(date): Backing up existing data directory" >> "$LOG_FILE"
    mv "$DATA_DIR" "${DATA_DIR}.backup.$(date +%s)"
fi

# Create fresh data directory
mkdir -p "$DATA_DIR"
chown postgres:postgres "$DATA_DIR"

# Perform base backup from primary
echo "$(date): Starting base backup from primary" >> "$LOG_FILE"
echo "You will be prompted for the replication user password." 
sudo -u postgres pg_basebackup \
    -h "$PRIMARY_HOST" \
    -p "$PRIMARY_PORT" \
    -U "$REPLICATION_USER" \
    -D "$DATA_DIR" \
    -S "$REPLICATION_SLOT" \
    -R \
    -v -P -W >> "$LOG_FILE" 2>&1


sudo chown -R postgres:postgres $DATA_DIR
sudo chmod 700 $DATA_DIR

echo "$(date): Base backup completed successfully" >> "$LOG_FILE"

# Start PostgreSQL as standby
systemctl start postgresql

echo "$(date): Streaming replication setup completed for $REPLICA_HOST" >> "$LOG_FILE"
