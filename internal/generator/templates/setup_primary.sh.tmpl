#!/bin/bash
# Replication slot setup script for PostgreSQL primary
# Generated by ha-syncgen

set -e

echo "Setting up replication slots on primary PostgreSQL server..."
# Append the setup files
echo "Configuring Postgresql settings..."

sudo tee -a {{.DataDirectory}}/postgresql.conf < ./postgresql.conf.custom > /dev/null
sudo tee -a {{.DataDirectory}}/pg_hba.conf < ./pg_hba.conf.custom > /dev/null
sudo systemctl restart postgresql

# Connect to PostgreSQL and create replication slots
psql -h {{ .PrimaryHost }} -p {{ .PrimaryPort }} -U {{ .DbUser }} -d {{ .DbName }} << 'EOF'
-- Create replication user if it doesn't exist
DO $$
BEGIN
    IF NOT EXISTS (SELECT 1 FROM pg_roles WHERE rolname = '{{ .ReplicationUser }}') THEN
        CREATE ROLE {{ .ReplicationUser }} WITH REPLICATION LOGIN PASSWORD '{{ .ReplicationPassword }}';
        GRANT CONNECT ON DATABASE postgres TO {{ .ReplicationUser }};
    END IF;
END
$$;

{{ range .Replicas }}-- Create replication slot for {{ .Host }}
SELECT CASE 
    WHEN NOT EXISTS (SELECT 1 FROM pg_replication_slots WHERE slot_name = '{{ .ReplicationSlot }}') 
    THEN pg_create_physical_replication_slot('{{ .ReplicationSlot }}')
    ELSE NULL
END;

{{ end }}EOF

echo "Replication slots setup completed!"
echo "Verifying replication slots:"
psql -h {{ .PrimaryHost }} -p {{ .PrimaryPort }} -U {{ .DbUser }} -d {{ .DbName }} -c "SELECT slot_name, slot_type, active FROM pg_replication_slots;"

echo ""
echo "Next steps:"
echo "1. Ensure postgresql.conf includes the generated configuration changes"
echo "2. Ensure pg_hba.conf includes the generated authentication rules"
echo "3. Run the replica setup scripts on each replica server"
